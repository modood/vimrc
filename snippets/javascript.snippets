# JavaScript snippets

# console.log
snippet log
	console.log(${1})

# Function
snippet fun
	function ${1:function_name} (${2:argument}) {
	  ${3:// body...}
	}

# Object Method
snippet :f
	${1:method_name}${2:: function} (${3:attribute}) {
	  ${4}
	}${5:,}

# Anonymous Function
snippet f
	function(${1:err}, ${2:result}) {
	  ${3}
	}

# if
snippet if
	if (${1:condition}) {
	  ${2}
	}

# if ... else
snippet ife
	if (${1:condition}) {
	  ${2}
	} else {
	  ${3}
	}

# switch
snippet switch
	switch (${1:expression}) {
	  case '${3:case}':
	    ${4}
	    break
	  ${5}
	  default:
	    ${2}
	}

# case
snippet case
	case '${1:case}':
	  ${2}
	  break
	${3}

# for (...) {...}
snippet for
	for (${1:var} ${2:i} = 0; $2 < ${3:Things}.length; $2++) {
	  ${4:$3[$2]}
	}

# for in
snippet fori
	for (${1:var} ${2:k} in ${3:Things}) {
	  ${4:$3['$2']}
	}

# while (...) {...}
snippet while
	while (${1:condition}) {
	  ${2}
	}

# do...while
snippet do
	do {
	  ${2}
	} while (${1:condition});

# ES6
snippet use
	'use strict'

	${1}
snippet =>
	(${1}) => {
	  ${2}
	}
snippet $
	${${1}}${2}
snippet const
	const { ${1}, ${2} } = ${3}
snippet let
	let { ${1}, ${2} } = ${3}
snippet import
	import ${1} from '${2}'

# NodeJS
snippet #!
	#!/usr/bin/env node
# require
snippet re
	${1:var} ${2:module_name} = require('${3:$2}')${4}
# module exports
snippet me
	module.exports = ${1}

# node_modules: moment
snippet moment
	moment(${1}).format('${2:YYYY-MM-DD HH:mm:ss}')${3}

# node_modules: request-promise
snippet rp
	rp({
	  method: '${1:POST}',
	  uri: '${2}',
	  body: {${3}},
	  json: true,
	})
	.then(function (${4:parsedBody}) {
	  ${5:// succeeded...}
	})
	.catch(function (${6:err}) {
	  ${7:// failed...}
	})
